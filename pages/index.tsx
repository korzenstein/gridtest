import Head from "next/head";
import { useState, Fragment } from "react";
import Image from "next/image";
import { cardArray } from "../components/cardArray";
import { motion } from "framer-motion";
import Link from 'next/link'

import nhlLogo from "../assets/nhlpa-logo-full.png";
import arrowUp from "../assets/arrowUp.png";
import Icon2D from "../assets/Icon2D";
import Icon3D from "../assets/Icon3D";
import Logo from "../assets/Logo";
import HamburgerIcon from "../assets/HamburgerIcon";

import { Main } from "../components/main/style";

import { BackToTop } from "../components/buttons/backToTop/style";
import { TwoDimentionSection } from "../components/twoDimensionSection/style";
import { TwoDimentionGrid, Card } from "../components/twoDimensionGrid/style";
import {
  TwoDimensionFooter,
  EmptySpace,
  Copyright,
} from "../components/twoDimensionFooter/style";
import {
  Switch,
  Handle,
  TopBar,
  SideBar,
  Hamburger,
  SideBarExpanded,
  TopBarExpanded,
} from "../components/navigation/style";

export default function Home() {
  const [dimensionChoice, setDimensionChoice] = useState(true);
  const [playerChoice, setPlayerChoice] = useState("");
  const [sideOpen, setSideOpen] = useState(false);
  const [topOpen, setTopOpen] = useState(false);

  const spring = {
    type: "spring",
    stiffness: 700,
    damping: 30,
  };

  const sectionVariants = {
    open: {
      y: 0,
      opacity: 1,
      transition: {
        y: { stiffness: 100, velocity: -100 },
        opacity: { duration: 0.4 },
      },
    },
    closed: {
      y: 300,
      opacity: 0,
      transition: {
        y: { stiffness: 100 },
        opacity: { duration: 0.4 },
      },
    },
  };

  const parentVariants = {
    open: {
      transition: {
        staggerChildren: 1,
        delayChildren: 1,
      },
    },
    closed: {
      transition: {
        staggerChildren: 1,
        staggerDirection: -1,
      },
    },
  };

  const childVariants = {
    open: {
      opacity: 1,
      transition: {
        opacity: { stiffness: 1000, velocity: -100, duration: 1 },
      },
    },
    closed: {
      opacity: 0,
      transition: {
        opacity: { stiffness: 1000, duration: 1 },
      },
    },
  };

  const imageVariants = {
    open: {
      y: 0,
      opacity: 1,
      transition: {
        y: { stiffness: 1000, velocity: -100, duration: 1 },
        opacity: { stiffness: 1000, velocity: -100, duration: 1 },
      },
    },
    closed: {
      y: 100,
      opacity: 0,
      transition: {
        y: { stiffness: 1000, duration: 1 },
        opacity: { stiffness: 1000, duration: 1 },
      },
    },
  };

  const sideVariants = {
    open: {
      width: "70%",
    },
    closed: {
      width: "0%",
    },
  };

  const topVariants = {
    open: {
      height: "40vh",
    },
    closed: {
      height: "0",
    },
  };

  const handleDimension = () => {
    setDimensionChoice(!dimensionChoice)
    setSideOpen(false);
  };

  const handleSideExpand = (id) => {
    setSideOpen(!sideOpen);
    setTopOpen(false);
    setPlayerChoice(id);
  };

  const handleTopExpand = () => {
    setSideOpen(false);
    setTopOpen(!topOpen);
  };

  const randomizer = () => {
    const options = ["flex-end", "flex-start"];
    const randomNumber = Math.floor(Math.random() * 2);
    return options[randomNumber];
  };

  const navigationArray = [
    {
      title: "Meet the players",
      route: '/'
    },
    {
      title: "Play the film",
      route: '/'
    },
    {
      title: "Win the bag",
      route: '/'
    },
    {
      title: "Copyright",
      route: '/'
    },
  ]
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div
        style={{
          display: "flex",
          flexDirection: "column",
          position: "relative",
        }}
      >
        <SideBarExpanded
          transition={{ duration: 0.6 }}
          variants={sideVariants}
          initial="closed"
          animate={sideOpen ? "open" : "closed"}
        ></SideBarExpanded>

        <TopBar 
        bg={dimensionChoice}
        >
          <span>
            <Logo topOpen={topOpen}></Logo>
          </span>

          <Switch 
          animate={topOpen ? {opacity: 0, pointerEvents: 'none'} : {opacity: 1}}
          toggle={dimensionChoice} 
          onClick={handleDimension}>
            <Handle layout transition={spring}></Handle>
            <Icon3D dimensionChoice={dimensionChoice} />
            <Icon2D dimensionChoice={dimensionChoice} />
          </Switch>

          <Hamburger onClick={handleTopExpand}>
            <HamburgerIcon topOpen={topOpen} />
          </Hamburger>

          <SideBar
          bg={dimensionChoice}
          ></SideBar>
          <TopBarExpanded
            transition={{ duration: 0.6 }}
            variants={topVariants}
            initial="closed"
            animate={topOpen ? "open" : "closed"}
          >
            {/* <motion.ul>
              {navigationArray.map(item => (
                <Link href={item.route}>
                <motion.li>{item.title}</motion.li>
                </Link>
              ))}
            
            </motion.ul> */}
          </TopBarExpanded>
        </TopBar>

        <Main>
          <TwoDimentionSection
            variants={sectionVariants}
            initial="closed"
            animate={dimensionChoice ? "open" : "closed"}
          >
            <TwoDimentionGrid variants={parentVariants}>
              {cardArray.map((item, index) => (
                <Fragment key={`fragment${index}`}>
                  <Card
                    variants={childVariants}
                    initial="closed"
                    whileInView="open"
                    viewport={{ once: true }}
                    style={
                      item.imgAlt.includes("dummy")
                        ? {
                            justifyContent: randomizer(),
                            alignItems: randomizer(),
                          }
                        : { justifyContent: "center", alignItems: "center" }
                    }
                  >
                    <motion.span
                      style={
                        item.imgAlt.includes("dummy")
                          ? { height: "auto", width: "100%" }
                          : { height: "100%", width: "100%" }
                      }
                      variants={imageVariants}
                      initial="closed"
                      whileInView="open"
                      viewport={{ once: true }}
                    >
                      <Image
                        style={
                          item.imgAlt.includes("dummy")
                            ? {
                                height: "auto",
                                maxWidth: "50%",
                                pointerEvents: "none",
                              }
                            : {
                                height: "100%",
                                width: "100%",
                                cursor: "pointer",
                              }
                        }
                        onClick={() => handleSideExpand(item.imgAlt)}
                        alt={`${item.imgAlt} ${index + 1}`}
                        src={item.imgScr}
                      />
                    </motion.span>
                    {/* <p>{index + 1}</p> */}
                  </Card>
                </Fragment>
              ))}
            </TwoDimentionGrid>
            <TwoDimensionFooter>
              <EmptySpace>
                <BackToTop>
                  <Image src={arrowUp} alt="arrow up" />
                  <p>BACK TO TOP</p>
                </BackToTop>
              </EmptySpace>
              <Copyright>
                <Image src={nhlLogo} alt="NHLPA Logo" />
                <p>
                  Copyright Â© 2022. National Hockey League Players Association
                </p>
              </Copyright>
            </TwoDimensionFooter>
          </TwoDimentionSection>
        </Main>
        {/* </div> */}
      </div>
    </div>
  );
}
